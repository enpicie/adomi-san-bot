on:
  workflow_call:
    inputs:
      app_name:
        description: Name of the application
        required: false
        type: string
      app_version:
        description: Version of the application
        required: true
        type: string
      deployment_env:
        description: Environment to deploy to (e.g., dev, prod)
        required: true
        type: string
      aws_region:
        description: AWS Region to deploy to
        required: true
        type: string
      artifact_s3_bucket:
        description: S3 bucket name for storing build artifacts
        required: true
        type: string
      hcp_terraform_org:
        description: HCP Terraform Organization name
        required: true
        type: string
      hcp_terraform_workspace:
        description: HCP Terraform Workspace name
        required: true
        type: string
      hcp_terraform_project:
        description: HCP Terraform Project name
        required: true
        type: string
    secrets:
      AWS_S3_ARTIFACT_UPLOAD_ROLE_ARN:
        description: AWS IAM Role ARN for S3 access
        required: true
      TF_API_TOKEN:
        required: true
      GH_ACTIONS_PAT:
        required: true

jobs:
  DeployViaHCPTerraform:
    runs-on: ubuntu-latest
    steps:
      - name: Setup HCP Terraform Workspace
        id: setup_workspace
        uses: chzylee/action-workflow-hcp-terraform-workspace-setup@v1.1.0
        with:
          tfc_organization: ${{ inputs.hcp_terraform_org }}
          tfc_workspace: ${{ inputs.hcp_terraform_workspace }}
          tfc_project: ${{ inputs.hcp_terraform_project }}
          tfc_token: ${{ secrets.TF_API_TOKEN }}

      - name: Attach IAM Permissions Variable Set to this Workspace
        uses: chzylee/action-workflow-hcp-terraform-var-set-attach@v1.0.1
        with:
          tfc_organization: ${{ inputs.hcp_terraform_org }}
          tfc_workspace_id: ${{ steps.setup_workspace.outputs.workspace_id }}
          tfc_token: ${{ secrets.TF_API_TOKEN }}
          var_set_name: ${{ vars.AWS_TF_ROLE_VARSET_LAMB_APIGW_DDB }}
          # Need permissions for Lambda, API Gateway, and DynamoDB

      - name: Deploy Workspace Config via HCP Terraform
        uses: chzylee/action-workflow-hcp-terraform-run@v1.1.1
        with:
          terraform_directory: ./terraform/workspace_config/${{ inputs.deployment_env }} # Get config for respective environment
          tfc_organization: ${{ inputs.hcp_terraform_org }}
          tfc_workspace: ${{ inputs.hcp_terraform_workspace }}
          tfc_token: ${{ secrets.TF_API_TOKEN }}

      - name: Upload Lambda Zip to S3
        uses: chzylee/action-workflow-upload-lambda-zip@v0.2.0
        with:
          source_directory: ./src # Path relative the repository root
          app_name: ${{ inputs.app_name }}
          artifact_name: ${{ inputs.app_name }}-latest # Always have startgg-bracket-helper-bot-latest.zip
          s3_bucket_name: ${{ inputs.artifact_s3_bucket }}
          aws_role_arn: ${{ secrets.AWS_S3_ARTIFACT_UPLOAD_ROLE_ARN }}

      - name: Upload Lambda Zip to S3
        uses: chzylee/action-workflow-upload-lambda-zip@v0.2.0
        with:
          source_directory: ./src
          app_name: ${{ inputs.app_name }}
          artifact_name: ${{ inputs.app_name }}-${{ inputs.app_version }} # Archive version named like startgg-bracket-helper-bot-1.0.0.zip
          s3_bucket_name: ${{ inputs.artifact_s3_bucket }}
          aws_role_arn: ${{ secrets.AWS_S3_ARTIFACT_UPLOAD_ROLE_ARN }}

      - name: Deploy Application Config via HCP Terraform
        uses: chzylee/action-workflow-hcp-terraform-run@v1.1.1
        with:
          terraform_directory: ./terraform/application
          tfc_organization: ${{ inputs.hcp_terraform_org }}
          tfc_workspace: ${{ inputs.hcp_terraform_workspace }}
          tfc_token: ${{ secrets.TF_API_TOKEN }}
